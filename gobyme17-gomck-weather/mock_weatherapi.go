// Code generated by MockGen. DO NOT EDIT.
// Source: weather.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWeatherAPI is a mock of WeatherAPI interface.
type MockWeatherAPI struct {
	ctrl     *gomock.Controller
	recorder *MockWeatherAPIMockRecorder
}

// MockWeatherAPIMockRecorder is the mock recorder for MockWeatherAPI.
type MockWeatherAPIMockRecorder struct {
	mock *MockWeatherAPI
}

// NewMockWeatherAPI creates a new mock instance.
func NewMockWeatherAPI(ctrl *gomock.Controller) *MockWeatherAPI {
	mock := &MockWeatherAPI{ctrl: ctrl}
	mock.recorder = &MockWeatherAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeatherAPI) EXPECT() *MockWeatherAPIMockRecorder {
	return m.recorder
}

// Fetch mocks base method.
func (m *MockWeatherAPI) Fetch(city string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", city)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch.
func (mr *MockWeatherAPIMockRecorder) Fetch(city interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockWeatherAPI)(nil).Fetch), city)
}
